local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16));if v19 then local v104=0;local v105;while true do if (v104==1) then return v105;end if (v104==0) then v105=v5(v81,v19);v19=nil;v104=1;end end else return v81;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (932 -((1734 -(282 + 595)) + 74)))) ;return v82-(v82%((2206 -(1523 + 114)) -(367 + 201))) ;else local v83=2^(v32-(928 -(214 + 713))) ;return (((v31%(v83 + v83))>=v83) and (1 + 0)) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (2 -0) ;return (v36 * 256) + v35 ;end local function v23() local v37=0;local v38;local v39;local v40;local v41;while true do if (v37==(1066 -(68 + 997))) then return (v41 * (16777333 -(32 + 85))) + (v40 * 65536) + (v39 * (1526 -(226 + (1916 -872)))) + v38 ;end if (v37==(0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + ((1310 -(87 + 263)) -(892 + (245 -(67 + 113)))) );v18=v18 + (9 -5) ;v37=4 -3 ;end end end local function v24() local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,1,20) * ((4 -(2 + 0))^32)) + v42 ;local v46=v20(v43,16 + 5 ,123 -92 );local v47=((v20(v43,32)==(953 -(802 + 150))) and  -1) or (2 -1) ;if (v46==(0 -0)) then if (v45==((791 -(368 + 423)) + (0 -0))) then return v47 * (997 -(915 + 82)) ;else v46=2 -1 ;v44=0 + 0 ;end elseif (v46==(2691 -644)) then return ((v45==(1187 -(1069 + 118))) and (v47 * ((2 -1)/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(178 + 845) ) * (v44 + (v45/((20 -(10 + 8))^(92 -40)))) ;end local function v25(v48) local v49;if  not v48 then local v84=(1486 -(998 + 488)) + 0 ;while true do if (v84==0) then v48=v23();if (v48==(0 -0)) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(443 -(133 + 283 + 26)) );v18=v18 + v48 ;local v50={};for v64=3 -2 , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 1636 -(1373 + 263) ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do if (v51==(1 + 1)) then for v92= #",",v23() do local v93=(function() return v21();end)();if (v20(v93, #".", #"!")==(698 -(208 + 490))) then local v100=(function() return 0 + 0 ;end)();local v101=(function() return;end)();local v102=(function() return;end)();local v103=(function() return;end)();while true do if (v100==(1 + 1)) then if (v20(v102, #"~", #"}")== #"{") then v103[838 -(660 + 176) ]=(function() return v57[v103[2]];end)();end if (v20(v102,1 + 1 ,204 -(14 + 188) )~= #"\\") then else v103[ #"asd"]=(function() return v57[v103[ #"19("]];end)();end v100=(function() return 678 -(534 + 141) ;end)();end if (v100==(0 + 0)) then local v106=(function() return 0 + 0 ;end)();while true do if (v106~=(1 + 0)) then else v100=(function() return 1 + 0 ;end)();break;end if (v106==(341 -(218 + 123))) then v101=(function() return v20(v93,3 -1 , #"xxx");end)();v102=(function() return v20(v93, #".dev",6 + 0 );end)();v106=(function() return 1 -0 ;end)();end end end if (1==v100) then local v107=(function() return 560 -(306 + 254) ;end)();while true do if (v107==(2 -1)) then v100=(function() return 2 + 0 ;end)();break;end if (v107~=(1467 -(899 + 568))) then else v103=(function() return {v22(),v22(),nil,nil};end)();if (v101==(0 + 0)) then local v146=(function() return 396 -(115 + 281) ;end)();local v147=(function() return;end)();while true do if (v146==(603 -(268 + 335))) then v147=(function() return 290 -(60 + 230) ;end)();while true do if ((0 -0)==v147) then v103[ #"91("]=(function() return v22();end)();v103[ #"0313"]=(function() return v22();end)();break;end end break;end end elseif (v101== #">") then v103[ #"19("]=(function() return v23();end)();elseif (v101==(2 + 0)) then v103[ #"91("]=(function() return v23() -((1458 -(282 + 1174))^16) ;end)();elseif (v101~= #"xxx") then else local v254=(function() return 0;end)();local v255=(function() return;end)();while true do if (v254==(811 -(569 + 242))) then v255=(function() return 0 -0 ;end)();while true do if ((0 -0)==v255) then v103[ #"91("]=(function() return v23() -((1 + 1)^(58 -42)) ;end)();v103[ #"xnxx"]=(function() return v22();end)();break;end end break;end end end v107=(function() return 868 -(550 + 317) ;end)();end end end if ((3 -0)~=v100) then else if (v20(v102, #"asd", #"xxx")~= #"|") then else v103[ #"asd1"]=(function() return v57[v103[ #".com"]];end)();end v52[v92]=(function() return v103;end)();break;end end end end for v94= #"[",v23() do v53[v94-#"\\" ]=(function() return v28();end)();end return v55;end if ( #","==v51) then local v88=(function() return 0;end)();local v89=(function() return;end)();while true do if (v88~=(0 -0)) then else v89=(function() return 0 -0 ;end)();while true do if (v89==1) then for v110= #"|",v56 do local v111=(function() return 0;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if ((1251 -(721 + 530))==v111) then v112=(function() return 0;end)();v113=(function() return nil;end)();v111=(function() return 1;end)();end if ((286 -(134 + 151))==v111) then v114=(function() return nil;end)();while true do if ((1272 -(945 + 326))~=v112) then else if (v113== #"\\") then v114=(function() return v21()~=(0 -0) ;end)();elseif (v113==(1667 -(970 + 695))) then v114=(function() return v24();end)();elseif (v113~= #"91(") then else v114=(function() return v25();end)();end v57[v110]=(function() return v114;end)();break;end if (v112==(0 -0)) then local v223=(function() return 1990 -(582 + 1408) ;end)();local v224=(function() return;end)();while true do if ((0 + 0)==v223) then v224=(function() return 0 -0 ;end)();while true do if (v224==(1 -0)) then v112=(function() return 1;end)();break;end if (v224~=(0 -0)) then else local v256=(function() return 0;end)();while true do if (v256~=0) then else v113=(function() return v21();end)();v114=(function() return nil;end)();v256=(function() return 1;end)();end if (v256~=1) then else v224=(function() return 1825 -(1195 + 629) ;end)();break;end end end end break;end end end end break;end end end v55[ #"asd"]=(function() return v21();end)();v89=(function() return 1 + 1 ;end)();end if (v89~=2) then else v51=(function() return 2;end)();break;end if ((0 -0)==v89) then v56=(function() return v23();end)();v57=(function() return {};end)();v89=(function() return 242 -(187 + 54) ;end)();end end break;end end end if ((1171 -(418 + 753))==v51) then local v90=(function() return 780 -(162 + 618) ;end)();local v91=(function() return;end)();while true do if ((0 + 0)~=v90) then else v91=(function() return 0 + 0 ;end)();while true do if (v91==1) then v54=(function() return {};end)();v55=(function() return {v52,v53,nil,v54};end)();v91=(function() return 3 -1 ;end)();end if (v91==(0 + 0)) then v52=(function() return {};end)();v53=(function() return {};end)();v91=(function() return 1 -0 ;end)();end if (v91==(1 + 1)) then v51=(function() return  #"~";end)();break;end end break;end end end end end local function v29(v58,v59,v60) local v61=v58[1];local v62=v58[2];local v63=v58[3];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=1770 -(1719 + 30 + 20) ;local v71= -(1 + 0);local v72={};local v73={...};local v74=v12("#",...) -(1 + 0) ;local v75={};local v76={};for v85=0,v74 do if (v85>=v68) then v72[v85-v68 ]=v73[v85 + (1146 -(466 + 679)) ];else v76[v85]=v73[v85 + (2 -1) ];end end local v77=(v74-v68) + (2 -1) ;local v78;local v79;while true do v78=v66[v70];v79=v78[1901 -(106 + (4617 -2823)) ];if ((v79<=(8 + 16)) or (4755==3428)) then if (v79<=11) then if (v79<=5) then if (v79<=((2 -1) + 1)) then if (v79<=(0 -(0 + 0))) then v76[v78[5 -3 ]]=v76[v78[117 -(4 + 110) ]] -v76[v78[4]] ;elseif (v79>(585 -(57 + 527))) then v76[v78[1429 -(41 + (3797 -2411)) ]]={};else v76[v78[105 -(17 + 86) ]]=v60[v78[3 + 0 ]];end elseif ((1381<=2369) and (v79<=(6 -(3 + 0)))) then v76[v78[2 + 0 ]]=v76[v78[8 -5 ]];elseif (v79==4) then local v151=166 -(122 + 44) ;local v152;local v153;local v154;while true do if (v151==(0 -0)) then v152=v78[6 -4 ];v153=v76[v152];v151=1 + 0 ;end if (v151==1) then v154=v78[4 -1 ];for v239=1 + 0 ,v154 do v153[v239]=v76[v152 + v239 ];end break;end end else v76[v78[2]]=v76[v78[3]] -v76[v78[(5 + 2) -3 ]] ;end elseif ((v79<=(73 -(30 + 35))) or (4843==4084)) then if ((4669>363) and (v79<=(5 + 1))) then v60[v78[1260 -(1043 + 214) ]]=v76[v78[7 -5 ]];elseif (v79==(1219 -(323 + (1052 -(92 + 71))))) then if (v78[(3 + 2) -3 ]==v76[v78[6 -2 ]]) then v70=v70 + (581 -(361 + (984 -(574 + 191)))) ;else v70=v78[323 -(53 + 267) ];end else for v206=v78[1 + 1 ],v78[416 -(15 + 398) ] do v76[v206]=nil;end end elseif (v79<=(991 -(15 + 3 + 964))) then local v123=v78[2];v76[v123]=v76[v123]();elseif (v79>10) then if (v78[7 -5 ]==v76[v78[4]]) then v70=v70 + 1 + 0 ;else v70=v78[2 + 1 ];end else do return v76[v78[852 -(20 + 830) ]];end end elseif (v79<=(42 -25)) then if ((v79<=(6 + 5 + 3)) or (1877>=3138)) then if (v79<=(138 -(116 + 10))) then v76[v78[2]]=v76[v78[3]][v76[v78[1 + 3 ]]];elseif ((4742>=3626) and (v79>(751 -((1391 -(254 + 595)) + 196)))) then local v156=v78[2];local v157,v158=v69(v76[v156](v13(v76,v156 + (1 -0) ,v78[1 + 2 ])));v71=(v158 + v156) -(1 + (126 -(55 + 71))) ;local v159=0 + 0 ;for v208=v156,v71 do local v209=0;while true do if ((v209==(0 -0)) or (4540==916)) then v159=v159 + (2 -1) ;v76[v208]=v157[v159];break;end end end else local v160=v78[1553 -(1126 + (559 -134)) ];v76[v160]=v76[v160](v76[v160 + (406 -(118 + 287)) ]);end elseif ((v79<=((1848 -(573 + 1217)) -43)) or (1156>4345)) then local v127=v78[2];local v128,v129=v69(v76[v127](v13(v76,v127 + (1122 -(118 + 1003)) ,v71)));v71=(v129 + v127) -(2 -1) ;local v130=0;for v144=v127,v71 do local v145=377 -(142 + 235) ;while true do if (v145==(0 -0)) then v130=v130 + 1 ;v76[v144]=v128[v130];break;end end end elseif (v79>(4 + (33 -21))) then v76[v78[2]]=v76[v78[3]];else local v164=977 -(553 + 424) ;local v165;local v166;local v167;local v168;while true do if (v164==(1 -0)) then v71=(v167 + v165) -(1 + 0) ;v168=0 + 0 ;v164=2 + 0 ;end if ((2237<4249) and (v164==0)) then v165=v78[1 + 0 + 1 ];v166,v167=v69(v76[v165](v13(v76,v165 + 1 + 0 ,v71)));v164=2 -(1 -0) ;end if (v164==((944 -(714 + 225)) -(8 -5))) then for v244=v165,v71 do v168=v168 + (2 -1) ;v76[v244]=v166[v168];end break;end end end elseif (v79<=20) then if (v79<=(6 + 12)) then v76[v78[9 -7 ]]=v60[v78[3]];elseif (v79>19) then do return v76[v78[755 -(239 + 514) ]];end else v76[v78[1 + (1 -0) ]]=v29(v67[v78[3]],nil,v60);end elseif (v79<=(1351 -(87 + 710 + 532))) then if (v79>(16 + 5)) then for v210=v78[1 + (1 -0) ],v78[(812 -(118 + 688)) -3 ] do v76[v210]=nil;end else local v170=v78[1204 -(373 + 829) ];v76[v170]=v76[v170]();end elseif (v79==(754 -((524 -(25 + 23)) + 255))) then do return;end else local v172=v78[2];v76[v172](v76[v172 + (1131 -(369 + 761)) ]);end elseif ((v79<=(7 + 29)) or (2683<23)) then if ((697<=826) and (v79<=30)) then if ((1105<=1176) and (v79<=(16 + 11))) then if (v79<=(45 -20)) then v60[v78[5 -2 ]]=v76[v78[240 -(64 + 174) ]];elseif ((3379<=3812) and (v79==(4 + 22))) then v70=v78[3 -0 ];else local v174=0;local v175;while true do if ((v174==0) or (788>=1616)) then v175=v78[338 -(144 + 192) ];v76[v175](v13(v76,v175 + ((2103 -(927 + 959)) -(42 + 174)) ,v71));break;end end end elseif ((1854<=3379) and (v79<=(22 + 6))) then v76[v78[2 + 0 ]]={};elseif (v79>((43 -30) + 16)) then local v176=v78[(2238 -(16 + 716)) -(363 + 1141) ];local v177,v178=v69(v76[v176](v13(v76,v176 + (1581 -(1183 + 397)) ,v78[8 -5 ])));v71=(v178 + v176) -(1 + 0) ;local v179=0;for v212=v176,v71 do local v213=0 + 0 ;while true do if ((4549==4549) and (v213==(1975 -((3692 -1779) + 62)))) then v179=v179 + 1 + 0 ;v76[v212]=v177[v179];break;end end end else local v180=0 -0 ;local v181;local v182;local v183;local v184;while true do if ((v180==(1933 -(565 + 1368))) or (3022>=3024)) then v181=v78[7 -5 ];v182,v183=v69(v76[v181]());v180=1;end if (v180==(1663 -(1477 + (281 -(11 + 86))))) then for v249=v181,v71 do v184=v184 + (1 -0) ;v76[v249]=v182[v184];end break;end if ((4820>2198) and (v180==(1 + 0))) then v71=(v183 + v181) -1 ;v184=856 -(564 + 292) ;v180=2 -0 ;end end end elseif (v79<=33) then if (v79<=(93 -62)) then local v136=v78[306 -(244 + (146 -86)) ];v76[v136](v76[v136 + 1 + 0 ]);elseif ((v79>32) or (1061>=4891)) then v76[v78[478 -(41 + 435) ]]=v76[v78[1004 -(938 + 63) ]][v78[4 + 0 ]];elseif (v76[v78[1127 -(936 + 189) ]]==v78[2 + 2 ]) then v70=v70 + (1614 -((1850 -(175 + 110)) + (120 -72))) ;else v70=v78[2 + 1 ];end elseif ((1364<=4473) and (v79<=(1172 -(782 + 356)))) then v76[v78[269 -(176 + 91) ]]=v78[3];elseif ((v79>35) or (3595<=3)) then local v187=0 -0 ;local v188;while true do if (((0 -0)==v187) or (4672==3852)) then v188=v78[1094 -((4808 -3833) + 117) ];v76[v188](v13(v76,v188 + (1876 -(157 + 1718)) ,v71));break;end end else local v189=v78[2 + (1796 -(503 + 1293)) ];v76[v189]=v76[v189](v76[v189 + (3 -2) ]);end elseif ((1559==1559) and (v79<=(143 -101))) then if ((v79<=(1057 -(697 + 321))) or (1752<=788)) then if (v79<=((279 -179) -(46 + 17))) then v76[v78[3 -1 ]]=v76[v78[6 -3 ]][v76[v78[2 + 2 ]]];elseif (v79==(70 -32)) then do return;end else v76[v78[5 -3 ]]= #v76[v78[3]];end elseif (v79<=(1267 -(322 + 905))) then v76[v78[613 -(602 + 9) ]]= #v76[v78[3]];elseif (v79==41) then local v192=v78[2];local v193,v194=v69(v76[v192]());v71=(v194 + v192) -(1190 -(449 + 740)) ;local v195=872 -(826 + 46) ;for v214=v192,v71 do v195=v195 + (948 -(245 + 702)) ;v76[v214]=v193[v195];end elseif ((v76[v78[(1067 -(810 + 251)) -4 ]]==v78[2 + 2 ]) or (3907==177)) then v70=v70 + (1899 -(260 + 1137 + 501)) ;else v70=v78[443 -(118 + 264 + 58) ];end elseif (v79<=((130 + 14) -99)) then if (v79<=(36 + 7)) then v76[v78[3 -1 ]]=v78[8 -5 ];elseif (v79==(1249 -(902 + 303))) then local v196=v78[3 -1 ];local v197=v76[v196];for v217=v196 + (2 -1) ,v78[1 + 2 ] do v7(v197,v76[v217]);end else v76[v78[2]]=v76[v78[1693 -(1121 + 569) ]][v78[218 -(22 + 192) ]];end elseif ((3470>555) and (v79<=(730 -(483 + 200)))) then if ((v79>(1509 -(1404 + 59))) or (972==645)) then v76[v78[5 -3 ]]=v29(v67[v78[3]],nil,v60);else local v201=v78[2 -0 ];do return v13(v76,v201,v201 + v78[(1301 -(43 + 490)) -(468 + 297) ] );end end elseif (v79>(610 -(334 + 228))) then v70=v78[10 -7 ];else local v203=v78[4 -2 ];local v204=v76[v203];local v205=v78[(738 -(711 + 22)) -2 ];for v218=1 + 0 ,v205 do v204[v218]=v76[v203 + v218 ];end end v70=v70 + (237 -(141 + 95)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
